//~jome 0.0.1

/*~md
# Torque Calculator Example
*/

//~begin input {"name": "force", "unit": "N*", "comment": "Newtons or equivalent", "onSave": "setValue"}
  // Jome code view: input force in N* // Newtons or equivalent
  let force;
//~end
//~begin input {"name": "distance", "unit": "m*", "comment": "meters or equivalent", "onSave": "setValue"}
  let distance;
//~end

/*~md Torque is the result of a force multiplied by a distance from a pivot point. */

/*~ignore
We use a jome tag because it's a script that can be run
The unit checker can infer that this block returns a value
with N*m or equivalent as a unit and shows it.
*/

/*~main
~arg force, ~unit N*, ~comment Newtons or equivalent
~arg distance, ~unit m*, ~comment meters or equivalent
*/
function main(force, distance) {
  //~run
  return force * distance; // the last value from a Jome tag is returned
  //~end
}

//~begin main
  //~arg force, ~unit N*, ~comment Newtons or equivalent
  //~arg distance, ~unit m*, ~comment meters or equivalent
  function main(force, distance) {
    return force * distance; // the last value from a Jome tag is returned
  }
//~end

/*~ignore
Ideas:
~html: Insert html
~txt: Insert text
*/