import assert from 'assert/strict'

import { describe, it } from 'minispec'

import {analyzeCode} from '../src/compiler.js'

describe "Incomplete statements" do
  it 'should return an error keyword let with nothing else' do
    let ctxFile = analyzeCode(`let`)
    assert.equal(ctxFile.errors.length, 1)
  end
  it 'should return an error keyword import with nothing else' do
    let ctxFile = analyzeCode(`import`)
    assert.equal(ctxFile.errors.length, 1)
  end
end

describe "Declaration should add to the lexical environment" do
  it 'let should add to the lexical environment' do
    let ctxFile = analyzeCode(`let x`)
    // assert.true(ctxFile.lexEnv.hasBinding("x"))
  end
  it 'import should add to the lexical environment' do
    let ctxFile = analyzeCode(`import name from 'file'`)
    // assert.true(ctxFile.lexEnv.hasBinding("name"))
  end
  it 'def should add to the lexical environment' do
    let ctxFile = analyzeCode(`def add(x, y) return x + y end`)
    // assert.true(ctxFile.lexEnv.hasBinding("add"))
  end
end