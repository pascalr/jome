import {HtmlPage} from '../../../lib/html-page.jome'
import {Div, renderHtmlTag} from '../../../lib/html.jome'
// import {Col, Row, Screen, Panel} from '../../lib/jome-html.jome'

interface BoxParams |
  @width?,
  @height?,
  @color?,
  @margin?,
  @border?,
  @shrink?,
  @grow?,
|

interface TextParams |
  @content,
  @color?,
  @bold?,
  @class?
|

def boxCss = |obj| => {
  width: obj.width,
  height: obj.height,
  background-color: obj.color,
  margin: obj.margin,
  border: obj.border,
  flex-grow: obj.grow,
  flex-shrink: obj.shrink
}

def textCss = |obj| => {
  color: obj.color
  font-weight: obj.bold ? "bold" : null
}

class Screen &BoxParams => {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html screen"
    css: {
      width: @width,
      height: @height,
      background-color: @color
    }
  ))
}

class Panel &BoxParams => {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html panel"
    css: boxCss(@)
  ))
}

class Row {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html row"
  ))
}

class Col {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html col"
  ))
}

// An hsplit takes the whole height compared to a row
class HSplit &BoxParams => {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html hsplit"
    css: boxCss(@)
  ))
}

// A vsplit takes the whole width compared to a col
class VSplit &BoxParams => {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html vsplit"
    css: boxCss(@)
  ))
}

class HAligned &BoxParams => {
  toString: => (renderHtmlTag('div', @.#children
    class: "jome-html haligned"
    css: boxCss(@)
  ))
}

class Txt &TextParams => {
  toString: => (renderHtmlTag('span', null, @content
    class: `jome-html{@class ? ` {@class}` : ''}`
    css: textCss(@)
  ))
}

class Link |&TextParams, @to?| => {
  toString: => (renderHtmlTag('a', @.#children, @content
    class: `jome-html{@class ? ` {@class}` : ''}`
    href: @to
    css: textCss(@)
  ))
}

bgColor1 = "#d6dbe2" // "#ded9d1"
bgColor2 = "#b5bcc9" // "#c9c2b5"
bgColorSelected = "#c8b099"
bgColor3 = "#d1d6de" // "#bfbbb3"
bgColor4 = "#b2b2b2"

    // Screen
    //   Col
    //     $navbar Panel color: '#ded9d1'
    //     Row
    //       $left_navbar Panel color: '#55aa77', width: 200px
    //       $main_panel Panel color: '#99dd11', flex_grow: 1
    //       $desc_panel Panel color: '#dd5511', width: 200px

// $navbar Panel color: '#ded9d1'

bod = {
  Screen color: bgColor1
    VSplit
      HAligned height: '30px'
        Txt "JomeEditor", class: 'editor-navbtn', bold: true // bold!
        Txt "File", class: 'editor-navbtn'
        Txt "Edit", class: 'editor-navbtn'
        Panel shrink: 1
        Link "About Jome", to: `{$URL}/`, class: 'editor-navbtn'
      HSplit
        VSplit width: '200px'
          Panel height: '50%', color: bgColor3, border: `4px solid {bgColor2}`
          Panel shrink: 1, color: bgColor3, border: `4px solid {bgColor2}`
        Panel shrink: 1, color: bgColor3, border: `4px solid {bgColor2}`
        Panel width: '200px', color: bgColor3, border: `4px solid {bgColor2}`
}

// TODO: Use AppPage and simply pass a parameter to hide the navbar and sidebar. This way I have proper head tags.
main {
  HtmlPage title: 'Jome editor', stylesheets: [`{$URL}/reset.css`, `{$URL}/jome-html.css`], body: bod.toString()
}.toString()
